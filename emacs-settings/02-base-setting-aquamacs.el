(setq  mac-command-modifier 'control)
(require 'recentf-ext)
(ansi-color-for-comint-mode-on)
(setq tab-width 4 indent-tabs-mode nil)
(require 'multi-eshell)
(require 'color-theme)
(color-theme-dark-laptop)
(set-face-attribute 'default nil :height 160)
(require 'parenthesis)
(require 'recent-jump-settings)
(require 'shell-command)
(require 'shell-command-extension)
(put 'narrow-to-region 'disabled nil)
(defun toggle-fullscreen ()
  "Toggle full screen"
  (interactive)
  (set-frame-parameter
     nil 'fullscreen
     (when (not (frame-parameter nil 'fullscreen)) 'fullboth)))
(defun ns-toggle-fullscreen-32 () 
  (interactive) 
  (shell-command "emacs_fullscreen.exe --topmost")
  )
(if (eq system-type 'windows-nt) 
    (global-set-key  [C-f12] 'ns-toggle-fullscreen-32)
  (global-set-key  [C-f12] 'toggle-fullscreen)
  )
(require 'color-moccur-setting)
(require 'feigo-key-setting)
(put 'scroll-left 'disabled nil)
(setq show-paren-style 'expression) 
(require 'hide-lines)
(require 'feigo-alias)
(require 'json-mode)
(setq vc-handled-backends nil)
(require 'smart-kill-mode)

(setq browse-kill-ring-quit-action 'save-and-restore)
(setq scroll-margin 1)
(setq split-height-threshold nil)
;; (require 'feigo-study-en-mode)
(require 'maxframe)
(maximize-frame)
;; (setq org-src-fontify-natively t)
;; (setq org-image-actual-width nil)
;; (require 'htmlize)
(require 'xah-comment)
;(add-to-list 'load-path "~/emacs-setting/dict_app/")
(require 'dictionary)
(setq sml/theme 'light)
(require 'smart-mode-line)
(sml/setup)
(provide '02-base-setting-aquamacs)
